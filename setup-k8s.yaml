---
- name: Update packages and versions
  hosts: all
  become: yes
  tasks:
    - name: apt update and upgrade
      ansible.builtin.apt:
        update-cache: true
        upgrade: yes
    - name: install curl , gpg , apt-transport-https
      ansible.builtin.apt:
        pkg:
        - apt-transport-https
        - curl
        - ca-certificates
        - gpg
- name: Install container runtime
  hosts: all
  become: yes
  tasks:
    - name: Install containerd
      ansible.builtin.apt:
        pkg:
        - containerd
    - name: Check containerd status
      shell: systemctl status containerd | grep active
      register: check_status
    - debug: msg={{check_status.stdout_lines}}
    - name: Create directory for containerd configs
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
    - name: Creating the containerd config and copying it to the dir
      shell: containerd config default | sudo tee /etc/containerd/config.toml
    - name: Change the value of SystemCgroup config.toml in containderd dir
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        after: 'runc.options'
        before: 'untrusted_workload_runtime'
        regexp: '^(\s*SystemdCgroup = )false$'
        replace: '\g<1>true'
    - name: Change the sandbox image version to 3.9 in config.toml
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: '^(.*sandbox_image = "registry\.k8s\.io/pause:)[0-9]+\.[0-9]+"$'
        replace: '\g<1>3.9"'
    - name: Enable bridging in /etc/sysctl.conf
      ansible.builtin.replace:
        path: /etc/sysctl.conf
        regexp: '^#(net\.ipv4\.ip_forward=1)$'
        replace: '\1'
    - name: Enable br_netfilter
      ansible.builtin.copy:
        src: k8s.conf
        dest: /etc/modules-load.d/k8s.conf

- name: Reboot the system
  hosts: all
  become: yes
  tasks:
    - name: reboot
      ansible.builtin.reboot:
- name: Initializing the kubernetes cluster
  hosts: all
  become: yes
  tasks:
    - name: Create the directory `/etc/apt/keyrings`
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
    - name: install the gpg key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: Adding the apt repository
      shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
    - name: Update the repo
      ansible.builtin.apt:
        update-cache: true
    - name: Install kubectl , kubeadm and kubelet
      ansible.builtin.apt:
        pkg:
        - kubeadm
        - kubectl
        - kubelet
    - name: Ensure kubelet is enabled and started
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes
        state: started
    - name: Pull Kubernetes images
      shell: kubeadm config images pull
    - name: initializing the cluster
      shell: kubeadm init  --pod-network-cidr=10.244.0.0/16
      args:
        creates: /etc/kubernetes/manifests/kube-apiserver.yaml
    - name: setting up kubeconfig
      shell: mkdir -p $HOME/.kube && sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && sudo chown $(id -u):$(id -g) $HOME/.kube/config
      args:
        creates: $HOME/.kube/config
    - name: Install the overlay network ( CNI ) [Flannel]
      shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      
